client : for frontend ( web Application) 
server: for backend (node API)

# web Application -> http request -> Node API

# we are using Express : most used pattern in express is MVC

# MVC 
 USER ->use -> CONTROLLER -> manipulates -> MODEL -> updates -> VIEW -> see -> USER 

# Folders inside server
1. models : for MVC
2. Routes : for different routers
   inside it : controllers : defines how we response to that specific route

# Folders in root 
1. client 
2. server

# It is a good practise to separate packages for both client and server
client => own package.json
server => own package.json
root => one package.json at the root level as well  

# always create package.json by : npm init 

# we are given the frontend with package json
1. now we need to install the dependencies : 1. cd client 
                                             2. npm install 
                                             3. npm start

# So we are having our API request to be embedded into request.js under hooks 

# setting up npm package in server side 
1. cd server 
2. npm init -y
2. npm install express

# Installing nodemon : helps preventing restaring the code again and again 
1. npm i nodemon
2. in package json under script =>   "watch": "nodemon src/server.js",
                                     "start": "node src/server.js"


# Try to follow similar pattern as of client 
1. so put src folder in server
2. move all js code in it 
3. also move models. routes into src